# This is a basic workflow to help you get started with Actions

name: Compile ESP32 Platformio

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
      with:
        ref: matchboxscope
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        pip install esptool
        dir
    # It is important to first install the libraries before compiling, since otherwise compilation might fail to find the just-installed libraries
    - name: Install platformIO libraries
      run: pio lib install
    # inject github token
    - name: Find and Replace (Github Token)
      uses: jacobtomlinson/gha-find-replace@v2
      with:
        find: '#include "githubtoken.h"'
        #replace: 'const char* GITHUB_TOKEN = "";'
        replace: 'const char* GITHUB_TOKEN = "${{ secrets.API_TOKEN_GITHUB }}";'
        regex: false
    # run for ESP32CAM
    - name: Run PlatformIO
      run: pio run
    - name: merge into one binary (ESP32CAM)
      run: |
        dir .pio/build/esp32cam/
        mv .pio/build/esp32cam/*.bin build/
        cd build
        python -m esptool --chip esp32 merge_bin  -o ESP32-CAMServerAdvanced.bin  --flash_mode dio  --flash_freq 40m  --flash_size 4MB  0x1000 bootloader.bin  0x8000 partitions.bin  0xe000 boot_app0.bin  0x10000 firmware.bin
    - uses: actions/upload-artifact@v3
      with:
        name: merged-firmware
        path: build/ESP32-matchboxscope.bin
    - name: Push to youseetoo Webtool
      uses: dmnemec/copy_file_to_another_repo_action@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.UPLOAD_GITHUB_TOKEN }}
      with:
        source_file: 'build/ESP32-CAMServerAdvanced.bin'
        destination_repo: 'matchboxscope/matchboxscope.github.io'
        destination_folder: 'static/firmware/static/firmware_build'
        user_email: 'bene.d@gmx.de'
        user_name: 'beniroquai'
        commit_message: 'A new firmware binary has been released (ESP32-matchboxscope.bin) => https://github.com/youseetoo/uc2-esp32'
    - name: merge into one binary (Xiao)
      run: |
        dir .pio/build/seeed_xiao_esp32s3/
        mv .pio/build/seeed_xiao_esp32s3/*.bin build/
        cd build
        python -m esptool --chip ESP32-S3 merge_bin -o xiao-sense-manifest.bin --flash_mode qio --flash_size 8MB 0x0000 bootloader.bin 0x8000 partitions.bin 0xe000 boot_app0.bin 0x10000 firmware.bin
    - uses: actions/upload-artifact@v3
      with:
        name: merged-firmware
        path: build/xiao-sense-manifest.bin
    - name: Push to youseetoo Webtool
      uses: dmnemec/copy_file_to_another_repo_action@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.UPLOAD_GITHUB_TOKEN }}
      with:
        source_file: 'build/xiao-sense-manifest.bin'
        destination_repo: 'matchboxscope/matchboxscope.github.io'
        destination_folder: 'static/firmware/static/firmware_build'
        user_email: 'bene.d@gmx.de'
        user_name: 'beniroquai'
        commit_message: 'A new firmware binary has been released (xiao-sense-manifest.bin) => https://github.com/youseetoo/uc2-esp32'
